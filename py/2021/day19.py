import numpy as np
import math


def distance(p1, p2):
    return math.sqrt(np.sum((p1 - p2)**2))


def parse_input(filename):
    lines = open(filename, 'r').read().splitlines()
    # lines = utils.read_lines(filename)

    result = []
    scanner = []

    for line in lines:
        if line.startswith("---"):
            continue
        if line == "":
            result.append(scanner)
            scanner = []
            continue

        t = line.split(",")
        scanner.append((np.array([int(t[0]), int(t[1]), int(t[2])]), set()))

    for scanner in result:
        for beacon1 in scanner:
            for beacon2 in scanner:
                beacon1[1].add(distance(beacon1[0], beacon2[0]))

    return result


orientations = np.array([[[-1, 0, 0], [0, -1, 0], [0, 0, 1]],
                         [[-1, 0, 0], [0, 0, -1], [0, -1, 0]],
                         [[-1, 0, 0], [0, 1, 0], [0, 0, -1]],
                         [[-1, 0, 0], [0, 0, 1], [0, 1, 0]],
                         [[0, -1, 0], [-1, 0, 0], [0, 0, -1]],
                         [[0, -1, 0], [0, 0, -1], [1, 0, 0]],
                         [[0, -1, 0], [1, 0, 0], [0, 0, 1]],
                         [[0, -1, 0], [0, 0, 1], [-1, 0, 0]],
                         [[0, 0, -1], [-1, 0, 0], [0, 1, 0]],
                         [[0, 0, -1], [0, -1, 0], [-1, 0, 0]],
                         [[0, 0, -1], [1, 0, 0], [0, -1, 0]],
                         [[0, 0, -1], [0, 1, 0], [1, 0, 0]],
                         [[1, 0, 0], [0, -1, 0], [0, 0, -1]],
                         [[1, 0, 0], [0, 0, -1], [0, 1, 0]],
                         [[1, 0, 0], [0, 1, 0], [0, 0, 1]],
                         [[1, 0, 0], [0, 0, 1], [0, -1, 0]],
                         [[0, 1, 0], [-1, 0, 0], [0, 0, 1]],
                         [[0, 1, 0], [0, 0, -1], [-1, 0, 0]],
                         [[0, 1, 0], [1, 0, 0], [0, 0, -1]],
                         [[0, 1, 0], [0, 0, 1], [1, 0, 0]],
                         [[0, 0, 1], [-1, 0, 0], [0, -1, 0]],
                         [[0, 0, 1], [0, -1, 0], [1, 0, 0]],
                         [[0, 0, 1], [1, 0, 0], [0, 1, 0]],
                         [[0, 0, 1], [0, 1, 0], [-1, 0, 0]]])

orientations = np.array([[[-1, 0, 0], [0, -1, 0], [0, 0, 1]],
                         [[-1, 0, 0], [0, 0, -1], [0, -1, 0]],
                         [[-1, 0, 0], [0, 1, 0], [0, 0, -1]],
                         [[-1, 0, 0], [0, 0, 1], [0, 1, 0]],
                         [[0, -1, 0], [-1, 0, 0], [0, 0, -1]],
                         [[0, 0, 1], [-1, 0, 0], [0, -1, 0]],
                         [[0, 1, 0], [-1, 0, 0], [0, 0, 1]],
                         [[0, 0, -1], [-1, 0, 0], [0, 1, 0]],
                         [[0, -1, 0], [0, 0, 1], [-1, 0, 0]],
                         [[0, 0, -1], [0, -1, 0], [-1, 0, 0]],
                         [[0, 1, 0], [0, 0, -1], [-1, 0, 0]],
                         [[0, 0, 1], [0, 1, 0], [-1, 0, 0]],
                         [[1, 0, 0], [0, -1, 0], [0, 0, -1]],
                         [[1, 0, 0], [0, 0, 1], [0, -1, 0]],
                         [[1, 0, 0], [0, 1, 0], [0, 0, 1]],
                         [[1, 0, 0], [0, 0, -1], [0, 1, 0]],
                         [[0, -1, 0], [1, 0, 0], [0, 0, 1]],
                         [[0, 0, -1], [1, 0, 0], [0, -1, 0]],
                         [[0, 1, 0], [1, 0, 0], [0, 0, -1]],
                         [[0, 0, 1], [1, 0, 0], [0, 1, 0]],
                         [[0, -1, 0], [0, 0, -1], [1, 0, 0]],
                         [[0, 0, 1], [0, -1, 0], [1, 0, 0]],
                         [[0, 1, 0], [0, 0, 1], [1, 0, 0]],
                         [[0, 0, -1], [0, 1, 0], [1, 0, 0]]])


def part1(path):
    scanners = parse_input(path)

    print(scanners[0][2])
